============================= test session starts ==============================
platform linux -- Python 3.12.10, pytest-8.3.5, pluggy-1.5.0 -- /usr/local/bin/python
cachedir: .pytest_cache
rootdir: /app
configfile: pyproject.toml
plugins: cov-6.1.1, anyio-4.9.0, asyncio-0.26.0, logfire-3.14.1
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collecting ... collected 8 items

tests/test_chat_api.py::test_create_conversation_success FAILED          [ 12%]
tests/test_chat_api.py::test_create_conversation_default_topic FAILED    [ 25%]
tests/test_chat_api.py::test_list_conversations_success FAILED           [ 37%]
tests/test_chat_api.py::test_add_message_success FAILED                  [ 50%]
tests/test_chat_api.py::test_add_message_invalid_conversation FAILED     [ 62%]
tests/test_chat_api.py::test_add_message_empty_message FAILED            [ 75%]
tests/test_chat_api.py::test_add_message_agent_unavailable FAILED        [ 87%]
tests/test_chat_api.py::test_api_key_required PASSED                     [100%]

=================================== FAILURES ===================================
_______________________ test_create_conversation_success _______________________

mock_agent = <AsyncMock name='ai_agent' id='281473675472160'>
async_client = <httpx.AsyncClient object at 0xffffb270aa80>

    @pytest.mark.asyncio
    @patch("minecraft_ai.api.endpoints.ai_agent", new_callable=AsyncMock)
    async def test_create_conversation_success(mock_agent, async_client):
        """
        Test creating a new conversation returns ConversationInfo with id and created_at.
        Assumes API key is valid or not required for test.
        """
        payload = {"topic": "Test Topic"}
        response = await async_client.post("/chats", json=payload)
>       assert response.status_code == status.HTTP_200_OK
E       assert 401 == 200
E        +  where 401 = <Response [401 Unauthorized]>.status_code
E        +  and   200 = status.HTTP_200_OK

tests/test_chat_api.py:48: AssertionError
----------------------------- Captured stdout call -----------------------------
01:40:47.096 POST /chats
01:40:47.101   FastAPI arguments
------------------------------ Captured log call -------------------------------
WARNING  minecraft_ai.api.security:security.py:29 Invalid API key provided
____________________ test_create_conversation_default_topic ____________________

async_client = <httpx.AsyncClient object at 0xffffb294cb90>

    @pytest.mark.asyncio
    async def test_create_conversation_default_topic(async_client):
        """
        Test creating a conversation with no topic sets topic to None or default.
        """
        response = await async_client.post("/chats", json={})
>       assert response.status_code == status.HTTP_200_OK
E       assert 401 == 200
E        +  where 401 = <Response [401 Unauthorized]>.status_code
E        +  and   200 = status.HTTP_200_OK

tests/test_chat_api.py:61: AssertionError
----------------------------- Captured stdout call -----------------------------
01:40:47.127 POST /chats
01:40:47.128   FastAPI arguments
------------------------------ Captured log call -------------------------------
WARNING  minecraft_ai.api.security:security.py:29 Invalid API key provided
_______________________ test_list_conversations_success ________________________

async_client = <httpx.AsyncClient object at 0xffffb2742240>

    @pytest.mark.asyncio
    async def test_list_conversations_success(async_client):
        """
        Test listing conversations returns only those for the implicit owner.
        """
        response = await async_client.get("/chats")
>       assert response.status_code == status.HTTP_200_OK
E       assert 401 == 200
E        +  where 401 = <Response [401 Unauthorized]>.status_code
E        +  and   200 = status.HTTP_200_OK

tests/test_chat_api.py:73: AssertionError
----------------------------- Captured stdout call -----------------------------
01:40:47.130 GET /chats
01:40:47.131   FastAPI arguments
------------------------------ Captured log call -------------------------------
WARNING  minecraft_ai.api.security:security.py:29 Invalid API key provided
___________________________ test_add_message_success ___________________________

mock_agent = <AsyncMock name='ai_agent' id='281473675706048'>
async_client = <httpx.AsyncClient object at 0xffffb2743f20>

    @pytest.mark.asyncio
    @patch("minecraft_ai.api.endpoints.ai_agent", new_callable=AsyncMock)
    async def test_add_message_success(mock_agent, async_client):
        """
        Test adding a message to a conversation stores user/assistant messages and returns reply.
        Mocks the agent to return a canned response.
        """
        # Create conversation first (simulate DB or use endpoint)
        create_resp = await async_client.post("/chats", json={"topic": "Chat"})
>       conv_id = create_resp.json()["id"]
E       KeyError: 'id'

tests/test_chat_api.py:89: KeyError
----------------------------- Captured stdout call -----------------------------
01:40:47.134 POST /chats
01:40:47.134   FastAPI arguments
------------------------------ Captured log call -------------------------------
WARNING  minecraft_ai.api.security:security.py:29 Invalid API key provided
____________________ test_add_message_invalid_conversation _____________________

async_client = <httpx.AsyncClient object at 0xffffb273a930>

    @pytest.mark.asyncio
    async def test_add_message_invalid_conversation(async_client):
        """
        Test adding a message to a nonexistent conversation returns 404.
        """
        payload = {"message": "Hi AI!"}
        response = await async_client.post("/chats/9999/messages", json=payload)
>       assert response.status_code == status.HTTP_404_NOT_FOUND
E       assert 401 == 404
E        +  where 401 = <Response [401 Unauthorized]>.status_code
E        +  and   404 = status.HTTP_404_NOT_FOUND

tests/test_chat_api.py:106: AssertionError
----------------------------- Captured stdout call -----------------------------
01:40:47.137 POST /chats/9999/messages
01:40:47.137   FastAPI arguments
------------------------------ Captured log call -------------------------------
WARNING  minecraft_ai.api.security:security.py:29 Invalid API key provided
________________________ test_add_message_empty_message ________________________

async_client = <httpx.AsyncClient object at 0xffffb2733f50>

    @pytest.mark.asyncio
    async def test_add_message_empty_message(async_client):
        """
        Test adding an empty message returns 422 (validation error).
        """
        # Create conversation first
        create_resp = await async_client.post("/chats", json={})
>       conv_id = create_resp.json()["id"]
E       KeyError: 'id'

tests/test_chat_api.py:116: KeyError
----------------------------- Captured stdout call -----------------------------
01:40:47.140 POST /chats
01:40:47.141   FastAPI arguments
------------------------------ Captured log call -------------------------------
WARNING  minecraft_ai.api.security:security.py:29 Invalid API key provided
______________________ test_add_message_agent_unavailable ______________________

async_client = <httpx.AsyncClient object at 0xffffb2730f80>

    @pytest.mark.asyncio
    @patch("minecraft_ai.api.endpoints.ai_agent", None)
    async def test_add_message_agent_unavailable(async_client):
        """
        Test adding a message when the agent is unavailable returns 503.
        """
        # Create conversation first
        create_resp = await async_client.post("/chats", json={})
>       conv_id = create_resp.json()["id"]
E       KeyError: 'id'

tests/test_chat_api.py:130: KeyError
----------------------------- Captured stdout call -----------------------------
01:40:47.144 POST /chats
01:40:47.144   FastAPI arguments
------------------------------ Captured log call -------------------------------
WARNING  minecraft_ai.api.security:security.py:29 Invalid API key provided
=========================== short test summary info ============================
FAILED tests/test_chat_api.py::test_create_conversation_success - assert 401 ...
FAILED tests/test_chat_api.py::test_create_conversation_default_topic - asser...
FAILED tests/test_chat_api.py::test_list_conversations_success - assert 401 =...
FAILED tests/test_chat_api.py::test_add_message_success - KeyError: 'id'
FAILED tests/test_chat_api.py::test_add_message_invalid_conversation - assert...
FAILED tests/test_chat_api.py::test_add_message_empty_message - KeyError: 'id'
FAILED tests/test_chat_api.py::test_add_message_agent_unavailable - KeyError:...
========================= 7 failed, 1 passed in 1.17s ==========================
