---
description: "Package management guidance using uv (auto-attached)"
globs:
  - pyproject.toml
  - requirements.txt
  - "**/*.py"
alwaysApply: false
---
# Package Management: Use `uv`

ðŸ“¦ **Rule Triggered:** Modification of dependency files (`pyproject.toml`, `requirements.txt`) or Python files (potential imports).

**Core Principle:** This project uses `uv` for all Python package management tasks. Manual editing of `pyproject.toml` for dependencies is discouraged.

**Action Required:**
- **Adding Dependencies:** Use `uv add <package>` or `uv add --dev <package>`.
- **Installing Dependencies:** Use `uv pip install <package>` (infrequent) or `uv sync` (preferred way to install from `pyproject.toml` lock file if present, or requirements).
- **Removing Dependencies:** Use `uv remove <package>`.
- **Checking Dependencies:** Do not suggest adding packages already present in `pyproject.toml`.
- **Avoid `pip`:** Do not use `pip install` commands directly.
- **Python Version:** Remember the project requires Python 3.12+.

**Reference:** Standard project setup in @README.md and @docs/DEVELOPER.md.

**Decision Point:** If a specific version constraint or dependency configuration seems necessary that `uv` commands don't easily handle, discuss the approach with the user before manually editing `pyproject.toml`.
